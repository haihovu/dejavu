/* Generated by Together */

package org.dejavu.fsm;

/**
 * Represents all FSM states, programmable with state names, ids, entry functions, and exit functions. 
 */
public class FsmState
{
	/**
	 * Initialization constructor. Note that the state ID is automatically generated via class utility FsmUtilities.
	 * @param name - Name of the state
	 * @param entryFunction Entry function (null if none is required)
	 * @param exitFunction Exit function (null if none is required)
	 */
	public FsmState(String name, FsmAction entryFunction, FsmAction exitFunction)
	{
		m_Name = name;
		m_EntryAction = entryFunction;
		m_ExitAction = exitFunction;
		m_Id = FsmUtilities.registerState(name);
	}

	/**
	 * Gets the state name
	 * @return The name of the state.
	 */
	public String getName()
	{
		return m_Name;
	}

	/**
	 * Gets the automatically generated state ID.
	 * @return The integer ID of the state
	 */
	public int getId()
	{
		return m_Id;
	}

	/**
	 * Executes the entry function, if exists.
	 * @param event The event to be passed into the state entry function.
	 */
	public void executeEntry(FsmEvent event)
	{
		if(null != m_EntryAction)
		{
			m_EntryAction.handleEvent(event);
		}
	}

	/**
	 * Executes the exit function, if exists.
	 * @param event The event to be passed to the state exit function.
	 */
	public void executeExit(FsmEvent event)
	{
		if(null != m_ExitAction)
		{
			m_ExitAction.handleEvent(event);
		}
	}

	@Override
	public String toString()
	{
        return "(FsmState " + m_Name + ")";
	}

	private final int m_Id;
	private final String m_Name;

	/**
	 * @supplierCardinality 1 
	 */
	private final FsmAction m_ExitAction;

	/**
	 * @supplierCardinality 1 
	 */
	private final FsmAction m_EntryAction;
}
